<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.example.database.mapper.LoanEntityMapper">

    <!-- ResultMap to map database columns to LoanEntity properties -->
    <resultMap id="LoanEntityResultMap" type="org.example.database.entity.LoanEntity">
        <id property="id" column="id"/>
        <result property="bookId" column="book_id"/>
        <result property="studentId" column="student_id"/>
        <result property="loanDate" column="loan_date"/>
        <result property="dueDate" column="due_date"/>
        <result property="returnDate" column="return_date"/>
    </resultMap>

    <resultMap id="LoansToBook" type="org.example.database.entity.LoansToBook">
        <result property="loanId" column="loan_id"/>
        <result property="bookId" column="book_id"/>
        <result property="studentId" column="student_id"/>
        <result property="studentName" column="student_name"/>
        <result property="loanDate" column="loan_date"/>
        <result property="dueDate" column="due_date"/>
        <result property="returnDate" column="return_date"/>
    </resultMap>
    
    <resultMap id="LoansToStudent" type="org.example.database.entity.LoansToStudent">
        <result property="loanId" column="loan_id"/>
        <result property="bookId" column="book_id"/>
        <result property="studentId" column="student_id"/>
        <result property="title" column="title"/>
        <result property="loanDate" column="loan_date"/>
        <result property="dueDate" column="due_date"/>
        <result property="returnDate" column="return_date"/>
    </resultMap>

    <!-- Find a loan by its ID -->
    <select id="findById" resultMap="LoanEntityResultMap">
        SELECT * FROM loans WHERE id = #{id}
    </select>

    <!-- Find all loans -->
    <select id="findAll" resultMap="LoanEntityResultMap">
        SELECT * FROM loans
    </select>

    <!-- Find loans by studentId -->
    <select id="findByStudentId" resultMap="LoansToStudent">
        SELECT
            l.id as loan_id,
            l.book_id,
            l.student_id,
            b.title,
            l.loan_date,
            l.due_date,
            l.return_date
        FROM loans l
        LEFT JOIN books b ON l.student_id = b.id
        WHERE student_id = #{studentId}
        ORDER BY l.id LIMIT #{size} OFFSET #{offset}
    </select>

    <!-- Find loans by bookId -->
    <select id="findByBookId" resultMap="LoansToBook">
        SELECT
            l.id as loan_id,
            l.book_id,
            l.student_id,
            CONCAT (s.first_name, ' ', s.last_name) as student_name,
            l.loan_date,
            l.due_date,
            l.return_date
        FROM loans l
        LEFT JOIN students s ON l.student_id = s.id
        WHERE book_id = #{bookId}
        ORDER BY l.id LIMIT #{size} OFFSET #{offset}
    </select>

    <!-- count loans by studentId -->
    <select id="countByStudent" resultType="long">
        SELECT COUNT(l.id) FROM loans l WHERE student_id = #{studentId}
    </select>

    <!-- count loans by bookId -->
    <select id="countByBook" resultType="long">
        SELECT COUNT(l.id) FROM loans l WHERE book_id = #{bookId}
    </select>

    <!-- Insert a new loan -->
    <insert id="insert" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO loans (book_id, student_id, loan_date, due_date, return_date)
        VALUES (#{bookId}, #{studentId}, #{loanDate}, #{dueDate}, #{returnDate})
    </insert>

    <!-- Update an existing loan -->
    <update id="update">
        UPDATE loans
        SET book_id = #{bookId},
            student_id = #{studentId},
            loan_date = #{loanDate},
            due_date = #{dueDate},
            return_date = #{returnDate}
        WHERE id = #{id}
    </update>

</mapper>
